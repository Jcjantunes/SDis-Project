//
// Protocol buffers definition for Silo server
//
syntax = "proto3";
package pt.tecnico.sauron.silo.grpc;

import "google/protobuf/timestamp.proto";


//ctrl_ping operation

message PingRequest {
  string inputText = 1;
}

message PingResponse {
  string outputText = 1;
}

//ctrl_clear operation

message ClearRequest {
}

message ClearResponse {
}


//ctrl_init operation

message InitRequest {
    int32 numberOfReplicas = 1;
    int32 initializeReplicaTimestamp = 2;
    int32 timer = 3;
}

message InitResponse {
    string outputText = 1;
}


//cam_join operation
message CamJoinRequest {
	string name = 1;
	double latitude = 2;
    double longitude = 3;
}

message CamJoinResponse {

}


//cam_info operation

message CamInfoRequest {
	string name = 1;
}

message CamInfoResponse {
	double latitude = 1;
    double longitude = 2;
}


//report operation

message ObservationMessage {
    string cameraName = 1;
    double latitude = 2;
    double longitude = 3;
    string tipo = 4;
    string identifier = 5;
    google.protobuf.Timestamp obsDate = 6;
}

message ReportRequest {
    repeated ObservationMessage observationMessageList = 1;
}

message ReportResponse {
    google.protobuf.Timestamp obsDate = 1;
}

//track operation

message TrackRequest {
    string type = 1;
    string id = 2;
}

message TrackResponse {
    string cameraName = 1;
    double latitude = 2;
    double longitude = 3;
    string tipo = 4;
    string identifier = 5;
    google.protobuf.Timestamp obsDate = 6;
}


//trackmatch operation

message TrackMatchRequest {
    string type = 1;
    string id = 2;
}

message TrackMatchResponse {
    repeated ObservationMessage observationMessageList = 1;
}


// trace operation

message TraceRequest {
    string type = 1;
    string id = 2;
}

message TraceResponse {
    repeated ObservationMessage observationMessageList = 1;
}


// query operation
message QueryOperationRequest{
}

message QueryOperationResponse{
    repeated int32 timestamp = 1;
}



// update operation
message UpdateReportRequest{
    repeated int32 timestamp = 1;
    repeated ObservationMessage reportParam = 2;
}

message UpdateReportResponse{
    repeated int32 timestamp = 1;
}


// update operation
message UpdateCamJoinRequest{
    repeated int32 timestamp = 1;
    string name = 2;
    double latitude = 3;
    double longitude = 4;
}

message UpdateCamJoinResponse{
    repeated int32 timestamp = 1;
}


// get numReplicas operation

message GetNumReplicasRequest {

}

message GetNumReplicasResponse {
    int32 numReplicas = 1;
}

// get numReplicas operation

message GetInitializedFlagRequest {

}

message GetInitializedFlagResponse {
    int32 intializedFlag = 1;
}

//Defining a Service
service Sauron {
  // Define a RPC operation
  rpc Ctrl_Ping(PingRequest) returns (PingResponse);
  rpc Ctrl_Clear(ClearRequest) returns (ClearResponse);
  rpc Ctrl_Init(InitRequest) returns (InitResponse);
  rpc Cam_Join(CamJoinRequest) returns (CamJoinResponse);
  rpc Cam_Info(CamInfoRequest) returns (CamInfoResponse);
  rpc Report(ReportRequest) returns (ReportResponse);
  rpc Track(TrackRequest) returns (TrackResponse);
  rpc TrackMatch(TrackMatchRequest) returns (TrackMatchResponse);
  rpc Trace(TraceRequest) returns (TraceResponse);
  rpc QueryOperation(QueryOperationRequest) returns (QueryOperationResponse);
  rpc UpdateReport(UpdateReportRequest) returns (UpdateReportResponse);
  rpc UpdateCamJoin(UpdateCamJoinRequest) returns (UpdateCamJoinResponse);
  rpc GetNumReplicas(GetNumReplicasRequest) returns (GetNumReplicasResponse);
  rpc GetInitializedFlag(GetInitializedFlagRequest) returns (GetInitializedFlagResponse);
}
